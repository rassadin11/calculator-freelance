{"version":3,"sources":["components/computes/enums.ts","components/Result.tsx","components/computes/Devision.ts","components/actions/Action.tsx","components/actions/ButtonOrder.ts","components/actions/Actions.tsx","components/computes/computeResult.ts","components/Calculator.tsx","App.tsx","index.tsx"],"names":["Signs","theme","createTheme","typography","fontFamily","join","Result","result","isNaN","numbers","toString","split","length","push","ThemeProvider","style","fontSize","marginTop","lineHeight","height","padding","background","boxShadow","borderRadius","map","numb","position","opacity","visibility","width","top","left","v4","expo","x","f","Number","parseFloat","toExponential","Action","button","symbol","number","setTemporaryResult","sendNumber","computeOperation","clearNumbers","handleClick","Grid","item","className","onClick","String","includes","chooseFunction","useStyles","makeStyles","alignItems","justifyContent","display","margin","flex","fontWeight","color","cursor","transition","largeButton","containedButton","ButtonOrder","Actions","setNumbers","signs","setSigns","temporaryResult","operator","container","spacing","sx","btn","key","styles","maxWidth","letterSpacing","fontStyle","Calculator","useState","Card","Typography","variant","component","res","operations","temp_result","shift","forEach","idx","oper","operate","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.300db728.chunk.js","sourcesContent":["export enum Signs {\r\n  '+' = 0,\r\n  '-' = 1,\r\n  'X' = 2,\r\n  'รท' = 3,\r\n  '+/-' = 4,\r\n  '=' = 5,\r\n  'AC' = 6,\r\n  '%' = 7,\r\n  ',' = 8,\r\n}\r\n","import React from 'react'\r\nimport { createTheme } from '@mui/material/styles'\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport { v4 } from 'uuid'\r\n\r\ninterface Props {\r\n  result: string | number\r\n}\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: ['Digital Numbers'].join(','),\r\n  },\r\n})\r\n\r\nconst Result = ({ result }: Props): JSX.Element => {\r\n  if (isNaN(+result)) result = 0\r\n  const numbers = result.toString().split('')\r\n\r\n  // letter for background zeros\r\n  while (numbers.length < 10) {\r\n    numbers.push('z')\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div>\r\n        <div\r\n          style={{\r\n            fontSize: 42,\r\n            marginTop: '24px',\r\n            fontFamily: 'Digital Numbers',\r\n            lineHeight: 1,\r\n            height: '100%',\r\n            padding: '22px',\r\n            background: 'linear-gradient(92.94deg, #CAD4C5 0%, #B2BFA5 100%)',\r\n            boxShadow: 'inset 0px 0px 9px rgba(0, 0, 0, 0.25)',\r\n            borderRadius: '10px',\r\n          }}\r\n        >\r\n          {numbers.map((numb) => (\r\n            <span key={v4()} style={{ position: 'relative' }}>\r\n              {numb !== 'z' ? (\r\n                numb\r\n              ) : (\r\n                <span style={{ opacity: 0, visibility: 'hidden', width: 0 }}>\r\n                  {numb}\r\n                </span>\r\n              )}\r\n              {numb !== '.' && (\r\n                <span\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: 5.4,\r\n                    left: 0,\r\n                    opacity: 0.15,\r\n                  }}\r\n                >\r\n                  0\r\n                </span>\r\n              )}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Result\r\n","// exponential function\r\n\r\nexport default function expo(x: string, f: number) {\r\n  return Number.parseFloat(x).toExponential(f)\r\n}\r\n","import React from 'react'\r\nimport { Grid } from '@mui/material'\r\nimport expo from '../computes/Devision'\r\nimport { Signs } from '../computes/enums'\r\n\r\ninterface Props {\r\n  symbol: string\r\n  result: string\r\n  number: boolean\r\n  // functions and styles\r\n  button: any\r\n  setTemporaryResult: any\r\n  sendNumber: any\r\n  computeOperation: any\r\n  clearNumbers: any\r\n}\r\n\r\nexport default function Action({\r\n  button,\r\n  symbol,\r\n  number,\r\n  setTemporaryResult,\r\n  result,\r\n  sendNumber,\r\n  computeOperation,\r\n  clearNumbers,\r\n}: Props): JSX.Element {\r\n  const handleClick = () => {\r\n    if (number) {\r\n      if (result.toString().split('').length > 9) {\r\n        return\r\n      } else if (result === '0') {\r\n        setTemporaryResult(symbol)\r\n      } else {\r\n        setTemporaryResult(result + symbol)\r\n      }\r\n    }\r\n  }\r\n\r\n  const chooseFunction = () => {\r\n    if (\r\n      Signs[0] === symbol ||\r\n      Signs[1] === symbol ||\r\n      Signs[2] === symbol ||\r\n      Signs[3] === symbol\r\n    ) {\r\n      return () => sendNumber(symbol)\r\n    } else if (symbol === Signs[4]) {\r\n      return () => setTemporaryResult(String(Number(result) * -1))\r\n    } else if (symbol === Signs[5]) {\r\n      return () => computeOperation()\r\n    } else if (symbol === Signs[6]) {\r\n      return () => clearNumbers()\r\n    } else if (symbol === Signs[7]) {\r\n      let numb = Number(result) / 100\r\n\r\n      if (numb.toString().split('').length > 10) {\r\n        numb = Number(expo(String(numb), 4))\r\n      }\r\n\r\n      return () => setTemporaryResult(numb)\r\n    } else if (symbol === Signs[8]) {\r\n      if (result.toString().split('').includes('.')) {\r\n        return\r\n      }\r\n\r\n      return () => setTemporaryResult(`${result}.`)\r\n    } else {\r\n      return handleClick\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid item className={button} onClick={chooseFunction()}>\r\n      <div>{symbol}</div>\r\n    </Grid>\r\n  )\r\n}\r\n","import { makeStyles } from '@mui/styles'\r\nimport { Signs } from '../computes/enums'\r\nimport { IButtonOrder } from './interfaces'\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    display: 'flex',\r\n    height: '79.46px',\r\n    background: '#F1F3F6',\r\n    boxShadow: '-5px -5px 10px #FFFFFF, 5px 5px 10px rgba(55, 84, 170, 0.1)',\r\n    borderRadius: '20px',\r\n    margin: '0 7.5px 15px',\r\n    marginTop: '10px',\r\n    flex: '0 0 20%',\r\n    fontFamily: 'Montserrat',\r\n    fontWeight: 'bold',\r\n    fontSize: '29px',\r\n    color: '#3A4E89',\r\n    cursor: 'pointer',\r\n    transition: 'all .3s ease',\r\n\r\n    '&:hover': {\r\n      boxShadow: '-5px -5px 10px #FFFFFF, 5px 5px 10px rgba(55, 84, 170, 0.4)',\r\n    },\r\n  },\r\n  largeButton: {\r\n    flex: '0 0 calc(40% + 25px)',\r\n  },\r\n  containedButton: {\r\n    background: '#3A4E89',\r\n    color: '#fff',\r\n    fontSize: '29px',\r\n  },\r\n})\r\n\r\nexport function ButtonOrder(): IButtonOrder[] {\r\n  const { button, containedButton, largeButton } = useStyles()\r\n\r\n  return [\r\n    {\r\n      button,\r\n      symbol: Signs[6],\r\n      number: false,\r\n    },\r\n    {\r\n      button,\r\n      symbol: Signs[4],\r\n      number: false,\r\n    },\r\n    {\r\n      button,\r\n      symbol: Signs[7],\r\n      number: false,\r\n    },\r\n    {\r\n      button: `${button} ${containedButton}`,\r\n      symbol: Signs[3],\r\n      number: false,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '7',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '8',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '9',\r\n      number: true,\r\n    },\r\n    {\r\n      button: `${button} ${containedButton}`,\r\n      symbol: Signs[2],\r\n      number: false,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '4',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '5',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '6',\r\n      number: true,\r\n    },\r\n    {\r\n      button: `${button} ${containedButton}`,\r\n      symbol: Signs[1],\r\n      number: false,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '1',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '2',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '3',\r\n      number: true,\r\n    },\r\n    {\r\n      button: `${button} ${containedButton}`,\r\n      symbol: Signs[0],\r\n      number: false,\r\n    },\r\n    {\r\n      button: `${button} ${largeButton}`,\r\n      symbol: '0',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: Signs[8],\r\n      number: false,\r\n    },\r\n    {\r\n      button: `${button} ${containedButton}`,\r\n      symbol: Signs[5],\r\n      number: false,\r\n    },\r\n  ]\r\n}\r\n","import { Grid } from '@mui/material'\r\nimport React from 'react'\r\nimport Action from './Action'\r\nimport { v4 } from 'uuid'\r\nimport { ButtonOrder } from './ButtonOrder'\r\n\r\ninterface Props {\r\n  numbers: string[]\r\n  signs: string[]\r\n  temporaryResult: string\r\n  // useState functions and compute functions\r\n  computeOperation: any\r\n  clearNumbers: any\r\n  setNumbers: any\r\n  setSigns: any\r\n  setTemporaryResult: any\r\n}\r\n\r\nexport default function Actions({\r\n  setNumbers,\r\n  numbers,\r\n  signs,\r\n  setSigns,\r\n  temporaryResult,\r\n  setTemporaryResult,\r\n  computeOperation,\r\n  clearNumbers,\r\n}: Props): JSX.Element {\r\n  const sendNumber = (operator: string) => {\r\n    setTemporaryResult('')\r\n    setNumbers([...numbers, temporaryResult])\r\n    setSigns([...signs, operator])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        sx={{ marginTop: '14px', justifyContent: 'space-between' }}\r\n      >\r\n        {ButtonOrder().map((btn) => (\r\n          <Action\r\n            {...btn}\r\n            key={v4()}\r\n            result={temporaryResult}\r\n            setTemporaryResult={setTemporaryResult}\r\n            sendNumber={sendNumber}\r\n            computeOperation={computeOperation}\r\n            clearNumbers={clearNumbers}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n","import expo from './Devision'\r\n\r\nexport default function (\r\n  numbers: string[],\r\n  operations: string[],\r\n  temp_result: string,\r\n  setNumbers: any\r\n): string {\r\n  numbers.push(temp_result)\r\n\r\n  let result: number = +numbers[0]\r\n  numbers.shift()\r\n\r\n  // compute result\r\n  numbers.forEach((numb, idx) => {\r\n    const oper = operations[idx] || operations[operations.length - 1]\r\n\r\n    if (oper === '+') {\r\n      result += +numb\r\n    }\r\n\r\n    if (oper === '-') {\r\n      result = result - +numb\r\n    }\r\n\r\n    if (oper === 'X') {\r\n      result = result * +numb\r\n    }\r\n\r\n    if (oper === 'รท') {\r\n      result = result / +numb\r\n    }\r\n  })\r\n\r\n  setNumbers([])\r\n  let res = ''\r\n  // check length of result\r\n  if (result.toString().length > 9) {\r\n    res = expo(String(result), 4)\r\n  }\r\n\r\n  return res.toString()\r\n}\r\n","import React, { useState } from 'react'\r\nimport Card from '@mui/material/Card'\r\nimport { Typography } from '@mui/material'\r\nimport { createTheme } from '@mui/material/styles'\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport Result from './Result'\r\nimport Actions from './actions/Actions'\r\nimport operate from './computes/computeResult'\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: ['Museo', 'Digital Numbers', 'Montserrat'].join(','),\r\n  },\r\n})\r\n\r\nconst styles = {\r\n  card: { maxWidth: 410, padding: '24px', background: '#F1F3F6' },\r\n  header: {\r\n    fontFamily: 'Museo',\r\n    fontSize: 28,\r\n    letterSpacing: '0.85px',\r\n    fontWeight: '600',\r\n    color: '#373A37',\r\n    lineHeight: '33.8px',\r\n    fontStyle: 'normal',\r\n  },\r\n}\r\n\r\nconst Calculator = (): any => {\r\n  const [numbers, setNumbers] = useState<string[]>([])\r\n  const [signs, setSigns] = useState<string[]>([])\r\n  const [temporaryResult, setTemporaryResult] = useState<string>('0')\r\n\r\n  // start calculation\r\n  const computeOperation = () => {\r\n    const res = numbers\r\n    setNumbers([])\r\n    setSigns([])\r\n    setTemporaryResult(operate(res, signs, temporaryResult, setNumbers))\r\n  }\r\n\r\n  // delete all data\r\n  const clearNumbers = () => {\r\n    setNumbers([])\r\n    setSigns([])\r\n    setTemporaryResult('0')\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div>\r\n        <Card sx={{ ...styles.card }}>\r\n          <Typography variant=\"h1\" component=\"div\" sx={{ ...styles.header }}>\r\n            Calculator\r\n          </Typography>\r\n          <Result result={temporaryResult} />\r\n          <Actions\r\n            setNumbers={setNumbers}\r\n            numbers={numbers}\r\n            signs={signs}\r\n            setSigns={setSigns}\r\n            temporaryResult={temporaryResult}\r\n            setTemporaryResult={setTemporaryResult}\r\n            computeOperation={computeOperation}\r\n            clearNumbers={clearNumbers}\r\n          />\r\n        </Card>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Calculator\r\n","import React from 'react'\nimport './App.css'\nimport Calculator from './components/Calculator'\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}