{"version":3,"sources":["components/Result.tsx","components/computes/Devision.ts","components/computes/enums.ts","components/actions/Action.tsx","components/actions/ButtonOrder.ts","components/actions/Actions.tsx","api/Api.ts","components/computes/computeResult.ts","components/Calculator.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","typography","fontFamily","join","Result","result","isNaN","numbers","toString","split","length","push","ThemeProvider","style","padding","background","boxShadow","borderRadius","marginTop","fontSize","lineHeight","height","whiteSpace","overflow","map","numb","position","opacity","visibility","width","top","left","v4","expo","x","f","Number","parseFloat","toExponential","Signs","Action","button","symbol","number","setTemporaryResult","sendNumber","computeOperation","clearNumbers","handleClick","Grid","item","className","onClick","String","includes","chooseFunction","ButtonOrder","containedButton","largeButton","useStyles","makeStyles","alignItems","justifyContent","display","margin","flex","fontWeight","color","cursor","transition","Actions","setNumbers","signs","setSigns","temporaryResult","operator","pop","container","spacing","sx","btn","key","instance","axios","create","baseURL","operations","temp_result","allNumbers","shift","forEach","idx","oper","async","exersize","post","expression","setOperations","Math","ceil","styles","maxWidth","letterSpacing","fontStyle","Calculator","useState","Card","Typography","variant","component","operate","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPASA,MAAMA,EAAQC,YAAY,CACxBC,WAAY,CACVC,WAAY,CAAC,mBAAmBC,KAAK,QA+D1BC,MA3DA,IAAqC,IAApC,OAAEC,GAAiC,EAC7CC,OAAOD,KAASA,EAAS,GAC7B,MAAME,EAAUF,EAAOG,WAAWC,MAAM,IAGxC,KAAOF,EAAQG,OAAS,IACtBH,EAAQI,KAAK,KAGf,OACE,cAACC,EAAA,EAAD,CAAeb,MAAOA,EAAtB,SACE,qBACEc,MAAO,CACLC,QAAS,OACTC,WAAY,sDACZC,UAAW,wCACXC,aAAc,OACdC,UAAW,QANf,SASE,qBACEL,MAAO,CACLM,SAAU,GACVjB,WAAY,kBACZkB,WAAY,EACZC,OAAQ,OACRC,WAAY,SACZC,SAAU,UAPd,SAUGhB,EAAQiB,KAAKC,GACZ,uBAAiBZ,MAAO,CAAEa,SAAU,YAApC,UACY,MAATD,EACCA,EAEA,sBAAMZ,MAAO,CAAEc,QAAS,EAAGC,WAAY,SAAUC,MAAO,GAAxD,SACGJ,IAGK,MAATA,GACC,sBACEZ,MAAO,CACLa,SAAU,WACVI,IAAK,IACLC,KAAM,EACNJ,QAAS,KALb,iBATOK,wB,SC5CR,SAASC,EAAKC,EAAWC,GACtC,OAAOC,OAAOC,WAAWH,GAAGI,cAAcH,GCHrC,IAAKI,ECmBG,SAASC,EAAT,GASS,IATO,OAC7BC,EAD6B,OAE7BC,EAF6B,OAG7BC,EAH6B,mBAI7BC,EAJ6B,OAK7BvC,EAL6B,WAM7BwC,EAN6B,iBAO7BC,EAP6B,aAQ7BC,GACqB,EACrB,MAAMC,EAAc,KAClB,GAAIL,EAAQ,CACV,GAAItC,EAAOG,WAAWC,MAAM,IAAIC,OAAS,EACvC,OAEAkC,EADoB,MAAXvC,EACUqC,EAEArC,EAASqC,KAsClC,OACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACC,UAAWV,EAAQW,QAlCT,MACrB,GACEb,EAAM,KAAOG,GACbH,EAAM,KAAOG,GACbH,EAAM,KAAOG,GACbH,EAAM,KAAOG,EAEb,MAAO,IAAMG,EAAWH,GACnB,GAAIA,IAAWH,EAAM,GAC1B,MAAO,IAAMK,EAAmBS,QAAyB,EAAlBjB,OAAO/B,KACzC,GAAIqC,IAAWH,EAAM,GAC1B,MAAO,IAAMO,IACR,GAAIJ,IAAWH,EAAM,GAC1B,MAAO,IAAMQ,IACR,GAAIL,IAAWH,EAAM,GAAI,CAC9B,IAAId,EAAOW,OAAO/B,GAAU,IAM5B,OAJIoB,EAAKjB,WAAWC,MAAM,IAAIC,OAAS,KACrCe,EAAOW,OAAOH,EAAKoB,OAAO5B,GAAO,KAG5B,IAAMmB,EAAmBnB,GAC3B,GAAIiB,IAAWH,EAAM,GAAI,CAC9B,GAAIlC,EAAOG,WAAWC,MAAM,IAAI6C,SAAS,KACvC,OAGF,MAAO,IAAMV,EAAmB,GAAD,OAAIvC,EAAJ,MAE/B,OAAO2C,GAK8BO,GAAvC,SACE,8BAAMb,MCxEL,SAASc,EACdf,EACAgB,EACAC,GAEA,MAAO,CACL,CACEjB,SACAC,OAAQH,EAAM,GACdI,QAAQ,GAEV,CACEF,SACAC,OAAQH,EAAM,GACdI,QAAQ,GAEV,CACEF,SACAC,OAAQH,EAAM,GACdI,QAAQ,GAEV,CACEF,OAAO,GAAD,OAAKA,EAAL,YAAegB,GACrBf,OAAQH,EAAM,GACdI,QAAQ,GAEV,CACEF,SACAC,OAAQ,IACRC,QAAQ,GAEV,CACEF,SACAC,OAAQ,IACRC,QAAQ,GAEV,CACEF,SACAC,OAAQ,IACRC,QAAQ,GAEV,CACEF,OAAO,GAAD,OAAKA,EAAL,YAAegB,GACrBf,OAAQH,EAAM,GACdI,QAAQ,GAEV,CACEF,SACAC,OAAQ,IACRC,QAAQ,GAEV,CACEF,SACAC,OAAQ,IACRC,QAAQ,GAEV,CACEF,SACAC,OAAQ,IACRC,QAAQ,GAEV,CACEF,OAAO,GAAD,OAAKA,EAAL,YAAegB,GACrBf,OAAQH,EAAM,GACdI,QAAQ,GAEV,CACEF,SACAC,OAAQ,IACRC,QAAQ,GAEV,CACEF,SACAC,OAAQ,IACRC,QAAQ,GAEV,CACEF,SACAC,OAAQ,IACRC,QAAQ,GAEV,CACEF,OAAO,GAAD,OAAKA,EAAL,YAAegB,GACrBf,OAAQH,EAAM,GACdI,QAAQ,GAEV,CACEF,OAAO,GAAD,OAAKA,EAAL,YAAeiB,GACrBhB,OAAQ,IACRC,QAAQ,GAEV,CACEF,SACAC,OAAQH,EAAM,GACdI,QAAQ,GAEV,CACEF,OAAO,GAAD,OAAKA,EAAL,YAAegB,GACrBf,OAAQH,EAAM,GACdI,QAAQ,K,SFvGFJ,O,YAAAA,I,YAAAA,I,SAAAA,I,kBAAAA,I,gBAAAA,I,YAAAA,I,WAAAA,I,YAAAA,I,aAAAA,M,iBGoBZ,MAAMoB,EAAYC,YAAW,CAC3BnB,OAAQ,CACNoB,WAAY,SACZC,eAAgB,SAChBC,QAAS,OACT1C,OAAQ,UACRN,WAAY,UACZC,UAAW,8DACXC,aAAc,OACd+C,OAAQ,eACR9C,UAAW,OACX+C,KAAM,UACN/D,WAAY,aACZgE,WAAY,OACZ/C,SAAU,OACVgD,MAAO,UACPC,OAAQ,UACRC,WAAY,eAEZ,UAAW,CACTrD,UAAW,gEAGf0C,YAAa,CACXO,KAAM,wBAERR,gBAAiB,CACf1C,WAAY,UACZoD,MAAO,OACPhD,SAAU,UAIC,SAASmD,EAAT,GASS,IATQ,WAC9BC,EAD8B,QAE9BhE,EAF8B,MAG9BiE,EAH8B,SAI9BC,EAJ8B,gBAK9BC,EAL8B,mBAM9B9B,EAN8B,iBAO9BE,EAP8B,aAQ9BC,GACqB,EACrB,MAAM,OAAEN,EAAF,gBAAUgB,EAAV,YAA2BC,GAAgBC,IAE3Cd,EAAc8B,IAIlB,GAHA/B,EAAmB,IACK,KAApB8B,GAAwBH,EAAW,IAAIhE,EAASmE,IAEhDF,EAAM9D,OAAS,EAAIH,EAAQG,OAG7B,OAFA8D,EAAMI,WACNH,EAAS,IAAID,EAAOG,IAItBF,EAAS,IAAID,EAAOG,KAGtB,OACE,8BACE,cAAC1B,EAAA,EAAD,CACE4B,WAAS,EACTC,QAAS,EACTC,GAAI,CAAE7D,UAAW,OAAQ4C,eAAgB,iBAH3C,SAKGN,EAAYf,EAAQgB,EAAiBC,GAAalC,KAAKwD,GACtD,wBAACxC,EAAD,IACMwC,EACJC,IAAKjD,cACL3B,OAAQqE,EACR9B,mBAAoBA,EACpBC,WAAYA,EACZC,iBAAkBA,EAClBC,aAAcA,U,YC3F1B,MAAMmC,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,+BCCI,eACb9E,EACA+E,EACAC,EACAhB,GAEAhE,EAAQI,KAAK4E,GAEb,MAAMC,EAAa,IAAIjF,GACvB,IAAIF,GAAkBE,EAAQ,GA6B9B,OA3BAA,EAAQkF,QAGRlF,EAAQmF,SAAQ,CAACjE,EAAMkE,KACrB,MAAMC,EAAON,EAAWK,IAAQL,EAAWA,EAAW5E,OAAS,GAElD,MAATkF,IACFvF,IAAWoB,GAGA,MAATmE,IACFvF,IAAmBoB,GAGR,MAATmE,IACFvF,IAAmBoB,GAGR,SAATmE,IACFvF,IAAmBoB,MD5BlBoE,eACLtF,EACA+E,EACAjF,GAEA,IAAIyF,EAAW,GAUf,GARAvF,EAAQmF,SAAQ,CAAC/C,EAAQgD,KACvB,IAAIC,EAAON,EAAWK,GACE,SAApBL,EAAWK,KAAcC,EAAO,KAEpCE,GAAYzC,OAAOV,GACfiD,IAAME,GAAYF,OAGnBE,KAAczF,EACV6E,EAASa,KAAK,aAAc,CACjCC,WAAYF,EACZzF,WCcJ4F,CAAcT,EAAYF,EAAYjC,OAAOhD,IAC7CkE,EAAW,IAGI,IAAXlE,EACK,IAENA,GAAU,MAASA,EAAS,GAC5BA,IAAW,MAASA,EAAS,EAEvB4B,EAAKoB,OAAOhD,GAAS,GACnBA,EAAOG,WAAWC,MAAM,IAAIC,QAAU,GAAKL,EAAS,IACtDgD,OAAO6C,KAAKC,KAAc,IAAT9F,GAAiB,KAChCA,EAAOG,WAAWC,MAAM,IAAIC,QAAU,GAAKL,GAAU,IACvD4B,EAAKoB,OAAOhD,GAAS,GAGvBA,EAAOG,YC9ChB,MAAMT,EAAQC,YAAY,CACxBC,WAAY,CACVC,WAAY,CAAC,QAAS,kBAAmB,cAAcC,KAAK,QAI1DiG,EACE,CAAEC,SAAU,IAAKvF,QAAS,OAAQC,WAAY,WADhDqF,EAEI,CACNlG,WAAY,QACZiB,SAAU,GACVmF,cAAe,SACfpC,WAAY,MACZC,MAAO,UACP/C,WAAY,SACZmF,UAAW,UA8CAC,MA1CI,KACjB,MAAOjG,EAASgE,GAAckC,mBAAmB,KAC1CjC,EAAOC,GAAYgC,mBAAmB,KACtC/B,EAAiB9B,GAAsB6D,mBAAiB,KAe/D,OACE,cAAC7F,EAAA,EAAD,CAAeb,MAAOA,EAAtB,SACE,8BACE,eAAC2G,EAAA,EAAD,CAAM3B,GAAI,IAAKqB,GAAf,UACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAM9B,GAAI,IAAKqB,GAAlD,wBAGA,cAAC,EAAD,CAAQ/F,OAAQqE,IAChB,cAACJ,EAAD,CACEC,WAAYA,EACZhE,QAASA,EACTiE,MAAOA,EACPC,SAAUA,EACVC,gBAAiBA,EACjB9B,mBAAoBA,EACpBE,iBA3Be,KACvBF,EAAmBkE,EAAQvG,EAASiE,EAAOE,EAAiBH,IAC5DE,EAAS,KA0BD1B,aAtBW,KACnBwB,EAAW,IACXE,EAAS,IACT7B,EAAmB,gBC/BRmE,MARf,WACE,OACE,qBAAK5D,UAAU,MAAf,SACE,cAAC,EAAD,O,MCFN6D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bdbedf97.chunk.js","sourcesContent":["import React from 'react'\r\nimport { createTheme } from '@mui/material/styles'\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport { v4 } from 'uuid'\r\n\r\ninterface Props {\r\n  result: string | number\r\n}\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: ['Digital Numbers'].join(','),\r\n  },\r\n})\r\n\r\nconst Result = ({ result }: Props): JSX.Element => {\r\n  if (isNaN(+result)) result = 0\r\n  const numbers = result.toString().split('')\r\n\r\n  // letter for background zeros\r\n  while (numbers.length < 10) {\r\n    numbers.push('z')\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div\r\n        style={{\r\n          padding: '20px',\r\n          background: 'linear-gradient(92.94deg, #CAD4C5 0%, #B2BFA5 100%)',\r\n          boxShadow: 'inset 0px 0px 9px rgba(0, 0, 0, 0.25)',\r\n          borderRadius: '10px',\r\n          marginTop: '24px',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontSize: 42,\r\n            fontFamily: 'Digital Numbers',\r\n            lineHeight: 1,\r\n            height: '100%',\r\n            whiteSpace: 'nowrap',\r\n            overflow: 'hidden',\r\n          }}\r\n        >\r\n          {numbers.map((numb) => (\r\n            <span key={v4()} style={{ position: 'relative' }}>\r\n              {numb !== 'z' ? (\r\n                numb\r\n              ) : (\r\n                <span style={{ opacity: 0, visibility: 'hidden', width: 0 }}>\r\n                  {numb}\r\n                </span>\r\n              )}\r\n              {numb !== '.' && (\r\n                <span\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: 5.4,\r\n                    left: 0,\r\n                    opacity: 0.15,\r\n                  }}\r\n                >\r\n                  0\r\n                </span>\r\n              )}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Result\r\n","// exponential function\r\n\r\nexport default function expo(x: string, f: number): string {\r\n  return Number.parseFloat(x).toExponential(f)\r\n}\r\n","export enum Signs {\r\n  '+' = 0,\r\n  '-' = 1,\r\n  'X' = 2,\r\n  'รท' = 3,\r\n  '+/-' = 4,\r\n  '=' = 5,\r\n  'AC' = 6,\r\n  '%' = 7,\r\n  ',' = 8,\r\n}\r\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\r\n\r\nimport React from 'react'\r\nimport { Grid } from '@mui/material'\r\nimport expo from '../computes/Devision'\r\nimport { Signs } from '../computes/enums'\r\n\r\ninterface Props {\r\n  symbol: string\r\n  result: string\r\n  number: boolean\r\n  // functions and styles\r\n  button: any\r\n  setTemporaryResult: any\r\n  sendNumber: any\r\n  computeOperation: any\r\n  clearNumbers: any\r\n}\r\n\r\nexport default function Action({\r\n  button,\r\n  symbol,\r\n  number,\r\n  setTemporaryResult,\r\n  result,\r\n  sendNumber,\r\n  computeOperation,\r\n  clearNumbers,\r\n}: Props): JSX.Element {\r\n  const handleClick = () => {\r\n    if (number) {\r\n      if (result.toString().split('').length > 9) {\r\n        return\r\n      } else if (result === '0') {\r\n        setTemporaryResult(symbol)\r\n      } else {\r\n        setTemporaryResult(result + symbol)\r\n      }\r\n    }\r\n  }\r\n\r\n  const chooseFunction = () => {\r\n    if (\r\n      Signs[0] === symbol ||\r\n      Signs[1] === symbol ||\r\n      Signs[2] === symbol ||\r\n      Signs[3] === symbol\r\n    ) {\r\n      return () => sendNumber(symbol)\r\n    } else if (symbol === Signs[4]) {\r\n      return () => setTemporaryResult(String(Number(result) * -1))\r\n    } else if (symbol === Signs[5]) {\r\n      return () => computeOperation()\r\n    } else if (symbol === Signs[6]) {\r\n      return () => clearNumbers()\r\n    } else if (symbol === Signs[7]) {\r\n      let numb = Number(result) / 100\r\n\r\n      if (numb.toString().split('').length > 10) {\r\n        numb = Number(expo(String(numb), 4))\r\n      }\r\n\r\n      return () => setTemporaryResult(numb)\r\n    } else if (symbol === Signs[8]) {\r\n      if (result.toString().split('').includes('.')) {\r\n        return\r\n      }\r\n\r\n      return () => setTemporaryResult(`${result}.`)\r\n    } else {\r\n      return handleClick\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid item className={button} onClick={chooseFunction()}>\r\n      <div>{symbol}</div>\r\n    </Grid>\r\n  )\r\n}\r\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\r\nimport { Signs } from '../computes/enums'\r\nimport { IButtonOrder } from './interfaces'\r\n\r\nexport function ButtonOrder(\r\n  button: any,\r\n  containedButton: any,\r\n  largeButton: any\r\n): IButtonOrder[] {\r\n  return [\r\n    {\r\n      button,\r\n      symbol: Signs[6],\r\n      number: false,\r\n    },\r\n    {\r\n      button,\r\n      symbol: Signs[4],\r\n      number: false,\r\n    },\r\n    {\r\n      button,\r\n      symbol: Signs[7],\r\n      number: false,\r\n    },\r\n    {\r\n      button: `${button} ${containedButton}`,\r\n      symbol: Signs[3],\r\n      number: false,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '7',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '8',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '9',\r\n      number: true,\r\n    },\r\n    {\r\n      button: `${button} ${containedButton}`,\r\n      symbol: Signs[2],\r\n      number: false,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '4',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '5',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '6',\r\n      number: true,\r\n    },\r\n    {\r\n      button: `${button} ${containedButton}`,\r\n      symbol: Signs[1],\r\n      number: false,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '1',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '2',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: '3',\r\n      number: true,\r\n    },\r\n    {\r\n      button: `${button} ${containedButton}`,\r\n      symbol: Signs[0],\r\n      number: false,\r\n    },\r\n    {\r\n      button: `${button} ${largeButton}`,\r\n      symbol: '0',\r\n      number: true,\r\n    },\r\n    {\r\n      button,\r\n      symbol: Signs[8],\r\n      number: false,\r\n    },\r\n    {\r\n      button: `${button} ${containedButton}`,\r\n      symbol: Signs[5],\r\n      number: false,\r\n    },\r\n  ]\r\n}\r\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\r\nimport { Grid } from '@mui/material'\r\nimport React from 'react'\r\nimport Action from './Action'\r\nimport { v4 } from 'uuid'\r\nimport { ButtonOrder } from './ButtonOrder'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\ninterface Props {\r\n  numbers: string[]\r\n  signs: string[]\r\n  temporaryResult: string\r\n  // useState functions and compute functions\r\n  computeOperation: any\r\n  clearNumbers: any\r\n  setNumbers: any\r\n  setSigns: any\r\n  setTemporaryResult: any\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    display: 'flex',\r\n    height: '79.46px',\r\n    background: '#F1F3F6',\r\n    boxShadow: '-5px -5px 10px #FFFFFF, 5px 5px 10px rgba(55, 84, 170, 0.1)',\r\n    borderRadius: '20px',\r\n    margin: '0 7.5px 15px',\r\n    marginTop: '10px',\r\n    flex: '0 0 20%',\r\n    fontFamily: 'Montserrat',\r\n    fontWeight: 'bold',\r\n    fontSize: '29px',\r\n    color: '#3A4E89',\r\n    cursor: 'pointer',\r\n    transition: 'all .3s ease',\r\n\r\n    '&:hover': {\r\n      boxShadow: '-5px -5px 10px #FFFFFF, 5px 5px 10px rgba(55, 84, 170, 0.4)',\r\n    },\r\n  },\r\n  largeButton: {\r\n    flex: '0 0 calc(40% + 25px)',\r\n  },\r\n  containedButton: {\r\n    background: '#3A4E89',\r\n    color: '#fff',\r\n    fontSize: '29px',\r\n  },\r\n})\r\n\r\nexport default function Actions({\r\n  setNumbers,\r\n  numbers,\r\n  signs,\r\n  setSigns,\r\n  temporaryResult,\r\n  setTemporaryResult,\r\n  computeOperation,\r\n  clearNumbers,\r\n}: Props): JSX.Element {\r\n  const { button, containedButton, largeButton } = useStyles()\r\n\r\n  const sendNumber = (operator: string) => {\r\n    setTemporaryResult('')\r\n    if (temporaryResult !== '') setNumbers([...numbers, temporaryResult])\r\n\r\n    if (signs.length + 1 > numbers.length) {\r\n      signs.pop()\r\n      setSigns([...signs, operator])\r\n      return\r\n    }\r\n\r\n    setSigns([...signs, operator])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        sx={{ marginTop: '14px', justifyContent: 'space-between' }}\r\n      >\r\n        {ButtonOrder(button, containedButton, largeButton).map((btn) => (\r\n          <Action\r\n            {...btn}\r\n            key={v4()}\r\n            result={temporaryResult}\r\n            setTemporaryResult={setTemporaryResult}\r\n            sendNumber={sendNumber}\r\n            computeOperation={computeOperation}\r\n            clearNumbers={clearNumbers}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:8000/api/',\r\n})\r\n\r\nexport async function setOperations(\r\n  numbers: string[],\r\n  operations: string[],\r\n  result: string\r\n) {\r\n  let exersize = ''\r\n\r\n  numbers.forEach((number, idx) => {\r\n    let oper = operations[idx]\r\n    if (operations[idx] === 'รท') oper = ':'\r\n\r\n    exersize += String(number)\r\n    if (oper) exersize += oper\r\n  })\r\n\r\n  if (+exersize !== +result) {\r\n    return instance.post('expression', {\r\n      expression: exersize,\r\n      result,\r\n    })\r\n  }\r\n}\r\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\r\nimport { setOperations } from '../../api/Api'\r\nimport expo from './Devision'\r\n\r\nexport default function (\r\n  numbers: string[],\r\n  operations: string[],\r\n  temp_result: string,\r\n  setNumbers: any\r\n): string {\r\n  numbers.push(temp_result)\r\n\r\n  const allNumbers = [...numbers]\r\n  let result: number = +numbers[0]\r\n\r\n  numbers.shift()\r\n\r\n  // compute result\r\n  numbers.forEach((numb, idx) => {\r\n    const oper = operations[idx] || operations[operations.length - 1]\r\n\r\n    if (oper === '+') {\r\n      result += +numb\r\n    }\r\n\r\n    if (oper === '-') {\r\n      result = result - +numb\r\n    }\r\n\r\n    if (oper === 'X') {\r\n      result = result * +numb\r\n    }\r\n\r\n    if (oper === 'รท') {\r\n      result = result / +numb\r\n    }\r\n  })\r\n  // save expressions\r\n  setOperations(allNumbers, operations, String(result))\r\n  setNumbers([])\r\n  // check length of result\r\n\r\n  if (result === 0) {\r\n    return '0'\r\n  } else if (\r\n    (result <= 10e-7 && result > 0) ||\r\n    (result >= -10e-7 && result < 0)\r\n  ) {\r\n    return expo(String(result), 4)\r\n  } else if (result.toString().split('').length >= 9 && result < 10e7) {\r\n    return String(Math.ceil(result * 10e7) / 10e7)\r\n  } else if (result.toString().split('').length >= 9 && result >= 10e7) {\r\n    return expo(String(result), 4)\r\n  }\r\n\r\n  return result.toString()\r\n}\r\n","import React, { useState } from 'react'\r\nimport Card from '@mui/material/Card'\r\nimport { Typography } from '@mui/material'\r\nimport { createTheme } from '@mui/material/styles'\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport Result from './Result'\r\nimport Actions from './actions/Actions'\r\nimport operate from './computes/computeResult'\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: ['Museo', 'Digital Numbers', 'Montserrat'].join(','),\r\n  },\r\n})\r\n\r\nconst styles = {\r\n  card: { maxWidth: 410, padding: '24px', background: '#F1F3F6' },\r\n  header: {\r\n    fontFamily: 'Museo',\r\n    fontSize: 28,\r\n    letterSpacing: '0.85px',\r\n    fontWeight: '600',\r\n    color: '#373A37',\r\n    lineHeight: '33.8px',\r\n    fontStyle: 'normal',\r\n  },\r\n}\r\n\r\nconst Calculator = (): JSX.Element => {\r\n  const [numbers, setNumbers] = useState<string[]>([])\r\n  const [signs, setSigns] = useState<string[]>([])\r\n  const [temporaryResult, setTemporaryResult] = useState<string>('0')\r\n\r\n  // start calculation\r\n  const computeOperation = () => {\r\n    setTemporaryResult(operate(numbers, signs, temporaryResult, setNumbers))\r\n    setSigns([])\r\n  }\r\n\r\n  // delete all data\r\n  const clearNumbers = () => {\r\n    setNumbers([])\r\n    setSigns([])\r\n    setTemporaryResult('0')\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div>\r\n        <Card sx={{ ...styles.card }}>\r\n          <Typography variant=\"h1\" component=\"div\" sx={{ ...styles.header }}>\r\n            Calculator\r\n          </Typography>\r\n          <Result result={temporaryResult} />\r\n          <Actions\r\n            setNumbers={setNumbers}\r\n            numbers={numbers}\r\n            signs={signs}\r\n            setSigns={setSigns}\r\n            temporaryResult={temporaryResult}\r\n            setTemporaryResult={setTemporaryResult}\r\n            computeOperation={computeOperation}\r\n            clearNumbers={clearNumbers}\r\n          />\r\n        </Card>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Calculator\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Calculator from './components/Calculator'\r\n\r\nfunction App(): JSX.Element {\r\n  return (\r\n    <div className=\"App\">\r\n      <Calculator />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}